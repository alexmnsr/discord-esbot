import nextcord

from utils.neccessary import user_visual


class RoleInfo:
    def __init__(self, role_names, tag):
        self.role_names = role_names
        self.tag = tag

    def find(self, guild_roles):
        for role in guild_roles:
            if role.name.lower() in [r.lower() for r in self.role_names]:
                return role
        return None


role_info = {
    '–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ': RoleInfo(['–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–ü—Ä–∞-–≤–æ'], '–ü—Ä–∞-–≤–æ | {}'),
    '–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –û–±–æ—Ä–æ–Ω—ã': RoleInfo(['–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –û–±–æ—Ä–æ–Ω—ã', '–ú–û'], '–ú–û | {}'),
    '–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è': RoleInfo(['–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', '–ú–ó'], '–ú–ó | {}'),
    '–¢–µ–ª–µ-–†–∞–¥–∏–æ –ö–æ–º–ø–∞–Ω–∏—è ¬´–†–∏—Ç–º¬ª': RoleInfo(['–¢–µ–ª–µ-–†–∞–¥–∏–æ –ö–æ–º–ø–∞–Ω–∏—è ¬´–†–∏—Ç–º¬ª', '–¢–†–ö'], '–¢–†–ö | {}'),
    '–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –î–µ–ª': RoleInfo(['–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –î–µ–ª', '–ú–í–î'], '–ú–í–î | {}'),
    '–§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –°–ª—É–∂–±–∞ –ò—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ù–∞–∫–∞–∑–∞–Ω–∏–π': RoleInfo(['–§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –°–ª—É–∂–±–∞ –ò—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ù–∞–∫–∞–∑–∞–Ω–∏–π', '–§–°–ò–ù'], '–§–°–ò–ù | {}')
}


class RoleRequest:
    def __init__(self, user, guild, nickname, rang, role_info_, statistics, statistics_hassle=None):
        self.user = user
        self.guild = guild
        self.nickname = nickname
        self.rang = rang
        self.role_info = role_info_
        self.statistics = statistics
        self.statistics_hassle = statistics_hassle

    @property
    def in_organization(self):
        for key, value in role_info.items():
            if role := value.find(self.user.roles):
                return role
        return

    @property
    def already_roled(self):
        if self.role_info.find(self.user.roles):
            return True

    @property
    def roles_channel(self):
        return [c for c in self.guild.channels if c.name in '–∑–∞—è–≤–∫–∏-–Ω–∞-—Ä–æ–ª–∏'][0]

    @property
    def check_embed(self):
        embed = nextcord.Embed(
            title='üìò –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ä–æ–ª—å',
            color=nextcord.Color.dark_blue(),
        )
        embed.add_field(name='–ù–∏–∫–Ω–µ–π–º', value=self.nickname)
        embed.add_field(name='–†–æ–ª—å', value=self.role_info.find(self.guild.roles).mention, inline=False)
        embed.add_field(name='–†–∞–Ω–≥', value=self.rang, inline=False)
        embed.add_field(name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value=user_visual(self.user), inline=False)
        return embed

    @property
    def files(self):
        return [self.statistics, self.statistics_hassle] if self.statistics_hassle else [self.statistics]

    @property
    def must_nick(self):
        tag = f'[{self.role_info.tag.format(self.rang)}] '
        return tag + self.nickname

    async def send(self):
        await self.roles_channel.send(embed=self.check_embed, files=self.files)
